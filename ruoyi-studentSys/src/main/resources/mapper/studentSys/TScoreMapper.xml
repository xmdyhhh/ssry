<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.studentSys.mapper.TScoreMapper">

    <resultMap type="TScore" id="TScoreResult">
        <result property="id" column="id"/>
        <result property="stuId" column="stu_id"/>
        <result property="courseId" column="course_id"/>
        <result property="stuScore" column="stu_score"/>
        <result property="status" column="status"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
        <result property="remark" column="remark"/>
    </resultMap>

    <sql id="selectTScoreVo">
        select id,
               stu_id,
               course_id,
               stu_score,
               status,
               create_by,
               create_time,
               update_by,
               update_time,
               remark
        from t_score
    </sql>

    <select id="selectTScoreList" parameterType="TScore" resultMap="TScoreResult">
        <include refid="selectTScoreVo"/>
        <where>
            <if test="stuId != null  and stuId != ''">and stu_id = #{stuId}</if>
            <if test="courseId != null  and courseId != ''">and course_id = #{courseId}</if>
            <if test="stuScore != null ">and stu_score = #{stuScore}</if>
            <if test="status != null  and status != ''">and status = #{status}</if>
        </where>
    </select>

    <select id="selectTScoreById" parameterType="Long" resultMap="TScoreResult">
        <include refid="selectTScoreVo"/>
        where id = #{id}
    </select>

    <insert id="insertTScore" parameterType="TScore" useGeneratedKeys="true" keyProperty="id">
        insert into t_score
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="stuId != null">stu_id,</if>
            <if test="courseId != null">course_id,</if>
            <if test="stuScore != null">stu_score,</if>
            <if test="status != null">status,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="stuId != null">#{stuId},</if>
            <if test="courseId != null">#{courseId},</if>
            <if test="stuScore != null">#{stuScore},</if>
            <if test="status != null">#{status},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
        </trim>
    </insert>

    <update id="updateTScore" parameterType="TScore">
        update t_score
        <trim prefix="SET" suffixOverrides=",">
            <if test="stuId != null">stu_id = #{stuId},</if>
            <if test="courseId != null">course_id = #{courseId},</if>
            <if test="stuScore != null">stu_score = #{stuScore},</if>
            <if test="status != null">status = #{status},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteTScoreById" parameterType="Long">
        delete
        from t_score
        where id = #{id}
    </delete>

    <delete id="deleteTScoreByIds" parameterType="String">
        delete from t_score where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select resultType="int" id="selectRangeByCourseId">
        select count(1)
        from t_score
        where course_id = #{courseId}
          and stu_score &lt; #{to}
          and stu_score >= #{from}
    </select>
    <select resultType="float" id="selectAvgByCourseId">
        select AVG(stu_score)
        from t_score,
             t_student
        where t_score.stu_id = t_student.stu_id
          and t_score.course_id = #{courseId}
          and t_student.cls_id = #{clsId}
    </select>
</mapper>